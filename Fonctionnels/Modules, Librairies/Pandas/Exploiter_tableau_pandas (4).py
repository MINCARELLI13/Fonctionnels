# -*- coding: utf8 -*-
#!/usr/bin/python

import pandas as pd

print("")
print("-----------------------------------------------------------------------------------------------------------------------------")

# on crée un tableau_python
maman_panda_py = [100, 5, 20, 80]      # où 100, 5, 20 et 80 sont respectvt les tailles des pattes, poil, queue et ventre
bebe_panda_py = [50, 2.5, 10, 40]
papa_panda_py = [110, 6, 22, 80]
famille_panda_py = [maman_panda_py, bebe_panda_py, papa_panda_py]
print("-------------------------------------------------------------------------")
print("famille_panda_py : ", famille_panda_py)

print("")
print("-------------------------------------------------------------------------")
# Création du tableau_pandas grâce à la méthode "DataFrame()"
famille_panda_pd = pd.DataFrame(famille_panda_py, index=["maman", "bebe", "papa"], columns=["pattes", "poil", "queue", "ventre"])
print("famille_panda_np :")
print(famille_panda_pd)

# --------------------------------------------------------------------------------------------------------------------------
                # Attention ! le format du tableau numpy est : tableau[ligne][colonne]
# les lignes correpondent aux menbres de la famille panda : maman, bebe, papa
# les colonnes correspondent respectivement aux tailles : de pattes, de poil, de queue et de ventre
# --------------------------------------------------------------------------------------------------------------------------

print("")
# Récupére la dernière colonne du tableau numpy (= colonne "ventre")
print('famille_panda_pd["ventre"] : ')
print(famille_panda_pd["ventre"])    # cette dernière ligne correspond aux diamètres du ventre de la "famille panda"

print("")
# Récupére la dernière colonne du tableau numpy (= colonne "ventre")
print("famille_panda_pd.ventre : ")
print(famille_panda_pd.ventre)    # cette dernière ligne correspond aux diamètres du ventre de la "famille panda"

print("")
# Récupére la première ligne du tableau numpy (= ligne "maman")
print("maman panda (famille_panda_pd.iloc[0]) : ")
print(famille_panda_pd.iloc[0])

print("")
# Récupére la deuxième ligne du tableau numpy (= ligne "bebe")
print('bebe panda (famille_panda_pd.loc["bebe"]) : ')
print(famille_panda_pd.loc["bebe"])

print("")
print('------------------------------------------------  méthode "iterrows()"  -------------------------------------------------')
# permet de parcourir toutes les lignes ie d'afficher toutes les valeurs de chacune des lignes
for ligne in famille_panda_pd.iterrows():
    index_ligne = ligne[0]                  # index_ligne = nom du panda
    contenu_ligne = ligne[1]                # valeurs des différentes colonnes correspondantes à la ligne
    print("Voici le panda %s :" % index_ligne)
    print(contenu_ligne)
    print("--------------------")

print("")
# Déterminons les pandas dont le diamètre du ventre est de 80 cm ici la maman et le papa
masque = famille_panda_pd["ventre"] == 80
print("masque : ")
print(masque)

print("")
# On utilise le "masque" précédent (un filtre) pour ne faire apparaître que les pandas de diamètre de ventre de 80 cm
# le "masque" renvoie un ensemble de boléens "True" ou "False" pour chacune des lignes (chacun des pandas)
pandas_80 = famille_panda_pd[masque]
print("pandas ayant des ventres de 80 cm : ")
print(pandas_80)

print("")
# Inversion du "masque" (du filtre) avec "~"
# pour ne faire apparaître que les pandas qui n'ont pas un ventre de 80 cm
pandas_80 = famille_panda_pd[~masque]
print("pandas n'ayant des ventres de 80 cm [~masque] : ")
print(pandas_80)

print("")
# Liste des "index" du tableau
print("famille_panda_pd.INDEX : ", famille_panda_pd.index)

print("")
# Liste des "columns" du tableau
print("famille_panda_pd.COLUMNS : ", famille_panda_pd.columns)

print("")
# nombre de lignes du tableau
print("len(famille_panda_pd) = nb de lignes = ",len(famille_panda_pd))

print("")
# Ajout de 2 nouveaux pandas avec les mêmes caractéristiques (pattes, poil, queue et ventre)
deux_pandas = pd.DataFrame([[105,4,19,80],[100,5,20,80]], index=["pandouille", "autre"], columns = famille_panda_pd.columns)   # on "crée" les 2 pandas
tous_les_pandas_pd = famille_panda_pd.append(deux_pandas)
print("tous les pandas : ")
print(tous_les_pandas_pd)

print("")
# Suppression d'un doublon (le permier panda (maman) et le dernier ont les mêmes "mensurations" )
tous_les_pandas_pd = tous_les_pandas_pd.drop_duplicates()
print("tous les pandas : ")
print(tous_les_pandas_pd)

print("")
# obtention des valeurs distinctes d'une colonne (suppression des valeurs en double)
tous_les_pandas_pd.ventre.unique()        # pour la colonne "ventre", il y a deux valeurs distinctes : 40 et 80
print("obtention des valeurs distinctes d'une colonne (tous_les_pandas_pd.ventre.unique()) : ")
print(tous_les_pandas_pd.ventre.unique())


print("")
# Création d'un nouvelle colonne "sexe" ("f"emelle, "m"âle, "a"utre)
tous_les_pandas_pd["sexe"] = ["f", "f", "m", "a"]
print("tous les pandas : ")
print(tous_les_pandas_pd)

print("")
# Lecture d'un fichier ".csv" (= tableau)
data = pd.read_csv("current_mps.csv", sep=";")         # on lit le fichier "current_mps.csv" avec le séparateur ";"
print("Lecture d'un fichier csv ( méthode 'pd.read_csv()' ) : ")
print('-->  ici, on affiche uniquement les renseignements du premier député ! (avec la méthode ".iloc[0]")')
print(data.iloc[0])     # ici, on affiche uniquement les renseignements du premier député




